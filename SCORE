## Loopchain SCORE?
* Loopchain의 Smart Contract입니다.
* 현재는 별도의 VM(Virtual Machine)이 없이 노드 운영환경에서 직접 실행됩니다.
  - Python Code로 직접 작성할 수 있어 높은 생산성을 가지고 있습니다.
* 블록체인 프로세스와 별도의 프로세스로 동작하면서 다양한 업무를 개발할 수 있도록 지원합니다.
* 각 피어에서 독립적으로 실행되며, Block 이 확정되는 시점에서 실행됩니다.
* Block별로 실행하며, 블록체인으로 구성하는 비지니스 로직을 구현한다.
* Python 언어로 개발되며, Loopchain의 dependency 를 따릅니다.

## SCORE 구조

![SCORE 구조](https://www.dropbox.com/s/8cu9gq182jgp92l/SCORE_Structure_2.png?dl=1)

_SCORE container를 Git Project로 관리하는 이유에 대해서 간결한 설명 추가 필요._
_Package.json, SCORE code(*.py)파일 별로 사용되는 목적(용도)에 대해서 간결한 설명 추가_
_SCORE container를 엔터프라이즈 별(고객별)로 수정해야 할 것으로 생각되는데 SCORE 심화 튜토리얼로 추가 필요하다고 생각됨_

## SCORE 실행 순서
1. RadioStation이 실행할 때에 이용하는 channel_manage_data.json의 `score_package` 옵션에서 특정 채널에서 불러올 SCORE를 지정합니다.
  ```
  {
    "channel1":
      {
        "score_package": "{your_github_id}/contract_sample"
      }
  }
  ```
2. docker로 Peer를 실행할 때의 `DEFAULT_SCORE_HOST`옵션으로 SCORE를 가져올 Git service URL을 지정합니다.
  ```
  $ docker run -d --name peer0 \
    -v $(pwd)/conf:/conf \
    -v $(pwd)/storage0:/.storage \
    -v $(pwd)/score:/score \
    -v "${SSH_KEY_FOLDER}:/root/.ssh/id_rsa \
    -e "DEFAULT_SCORE_HOST=github.com" \
    --link radio_station:radio_station \
    --log-driver fluentd --log-opt fluentd-address=localhost:24224 \
    -p 7100:7100 -p 9000:9000  \
    loopchain/looppeer:${TAG} \
    python3 peer.py -o /conf/peer_conf.json  -r radio_station:7102
  ```

3. peer가 시작될 때 Git servie에서 SCORE가 있는 Repository[Package.json, SCORE code(*.py)]를 pull합니다.
4. Pull받은 코드 중에 Package.json에서 모듈들을 읽어서 다른 Process로 실행한다.
